#BlueJ class context
comment0.params=
comment0.target=Zeichnung()
comment0.text=\n\ privater\ Konstruktor\n
comment1.params=
comment1.target=Zeichnung\ gibZeichnung()
comment1.text=\n\ Fabrikmethode\ fuer\ das\ Zeichnungsobjekt\ \ mit\ eigener\ Gui\n\ @return\ zeichnung\ \ \ \ \ \ das\ Zeichnungs-Singleton\n
comment10.params=i
comment10.target=void\ aendereFuellung(int)
comment10.text=\n\ aendereFuellung\n\ wechselt\ den\ Zustand\ der\ Fuellung\ vom\ Objekt\ an\ der\ Position\ in\ der\ Liste\n\ @param\ i\ \ \ \ \ \ \ zulaessige\ Position\ in\ der\ Liste;\ 0...figuren.size()-1\n
comment11.params=objekt1\ objekt2
comment11.target=void\ tauscheReihenfolge(java.lang.Object,\ java.lang.Object)
comment11.text=\n\ tauscheReihenfolge\n\ tauscht\ zwei\ Grafikobjekte\ in\ der\ Reihenfolge\ aus\ und\n\ ermoeglicht\ dadurch\ gezieltes\ Decken\ von\ gefuellten\ Figuren.\n\ @param\ objekt1\ \ \ \ \ \ \ das\ erste\ der\ zu\ tauschenden\ Grafikobjekte\n\ @param\ objekt2\ \ \ \ \ \ \ das\ zweite\ der\ zu\ tauschenden\ Grafikobjekte\n
comment12.params=pos1\ pos2
comment12.target=void\ tauscheReihenfolge(int,\ int)
comment12.text=\n\ tauscheReihenfolge\n\ tauscht\ zwei\ Grafikobjekte\ in\ der\ Reihenfolge\ aus\ und\n\ ermoeglicht\ dadurch\ gezieltes\ Decken\ von\ gefuellten\ Figuren.\n\ @param\ pos1\ \ \ \ \ \ \ \ \ \ \ \ \ die\ erste\ der\ beiden\ Positionen\n\ @param\ pos2\ \ \ \ \ \ \ \ \ \ \ \ \ die\ zweite\ der\ beiden\ Positionen\n
comment13.params=
comment13.target=java.util.ArrayList\ gibFiguren()
comment13.text=\n\ gibt\ die\ zu\ zeichnenden\ Figuren\ in\ der\ gegebenen\n\ Reihenfolge\ zur\u00FCck.\n\ @return\ figuren\ \ \ die\ Liste\ der\ zu\ zeichnenden\ Figuren\n
comment14.params=
comment14.target=void\ update()
comment14.text=\n\ update\n\ loest\ erneutes\ Zeichnen\ aus\n
comment15.params=millisekunden
comment15.target=void\ warte(int)
comment15.text=\n\ warte\n\ ermoeglicht\ schrittweise\ Darstellungen\n\ @param\ zeit\ \ \ \ \ \ in\ Millisekunden\n
comment16.params=
comment16.target=java.lang.String\ zeigeZulaessigeFarbnamen()
comment16.text=\n\ zeigt\ alle\ zulaessigen\ Farbnamen\ von\ FarbFigur\ in\ einem\ String\ an\n\ @return\ alleNamen\ \ \ \ \ in\ einem\ String\n
comment2.params=evt
comment2.target=void\ windowClosing(java.awt.event.WindowEvent)
comment3.params=dieGui
comment3.target=Zeichnung\ gibZeichnung(javax.swing.JFrame)
comment3.text=\n\ Fabrikmethode\ fuer\ das\ Zeichnungsobjekt\n\ mit\ fremdem\ JFrame-Objekt.\n\ @param\ dieGui\ \ \ \ das\ externe\ JFRame-Objekt\n\ @return\ zeichnung\ \ \ \ \ \ das\ Zeichnungs-Singleton\n
comment4.params=breite\ hoehe
comment4.target=Zeichnung\ gibZeichnung(int,\ int)
comment4.text=\n\ Fabrikmethode\ fuer\ das\ Zeichnungsobjekt\ mit\ uebergebener\ Fenstergroesse\n\ @param\ breite\ \ \ \ \ in\ Pixeln\n\ @param\ hoehe\ \ \ \ \ in\ Pixeln\n\ @return\ zeichnung\ \ \ \ \ \ das\ Zeichnungs-Singleton\n
comment5.params=dieGui\ breite\ hoehe
comment5.target=Zeichnung\ gibZeichnung(javax.swing.JFrame,\ int,\ int)
comment5.text=\n\ Fabrikmethode\ fuer\ das\ Zeichnungsobjekt\n\ mit\ uebergebenen\ fremdem\ JFrame-Objekt\ und\ Fenstergroesse\n\ @param\ dieGui\ \ \ \ das\ externe\ JFRame-Objekt\n\ @param\ breite\ \ \ \ \ in\ Pixeln\n\ @param\ hoehe\ \ \ \ \ in\ Pixeln\n\ @return\ zeichnung\ \ \ \ \ \ das\ Zeichnungs-Singleton\n
comment6.params=
comment6.target=Zeichnung.Zeichenflaeche\ gibZeichenflaeche()
comment6.text=\n\ gibZeichenflaeche\n\ erm\u00F6glicht\ den\ Zugriff\ auf\ die\ Zeichenflaeche\ [JPanel]\ durch\ die\ fremde\ Gui\n\ @return\ zeichenflaeche\ \ \ \ das\ Zeichenflaeche-Singleton\n
comment7.params=form\ farbname\ voll
comment7.target=java.lang.Object\ zeichne(java.awt.Shape,\ java.lang.String,\ boolean)
comment7.text=\n\ zeichne\n\ nimmt\ ein\ neues\ Grafikobjekt\ auf\ und\ \n\ setzt\ es\ an\ eine\ Standardposition\ am\ Ende\ der\ Liste\n\ @param\ form\ \ \ \ \ implementiert\ Shape\n\ @param\ farbname\ Farbe\ ["rot"\ usw.]\n\ @param\ voll\ \ \ \ \ true,\ wenn\ gefuellt\n\ @return\ grafikobjekt\ \ \ \ das\ Objekt\ [FarbFigur]\n
comment8.params=grafikobjekt
comment8.target=void\ loesche(java.lang.Object)
comment8.text=\n\ loesche\n\ entfernt\ ein\ Grafikobjekt\ aus\ der\ Darstellung.\n\ macht\ nichts,\ wenn\ es\ nicht\ enthalten\ war.\n\ @param\ grafikobjekt\ \ \ \ \ das\ zu\ entfernende\ Objekt\n
comment9.params=i
comment9.target=java.lang.Object\ gibFigur(int)
comment9.text=\n\ gibFigur\n\ gibt\ das\ Objekt\ von\ der\ Position\ in\ der\ Liste\ zur\u00FCck\n\ @param\ i\ \ \ Position\ in\ der\ Liste;\ 0...figuren.size()-1\n\ @return\ grafikobjekt\ \ \ \ \n\ \ \ \ \ \ \ \ \ das\ Objekt\ an\ der\ Position\ in\ der\ Liste\n
numComments=17
